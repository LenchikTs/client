# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Rabota\s11\Reports\AnaliticReportsSurgeryStationary.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_AnaliticReportsSurgeryStationaryDialog(object):
    def setupUi(self, AnaliticReportsSurgeryStationaryDialog):
        AnaliticReportsSurgeryStationaryDialog.setObjectName(_fromUtf8("AnaliticReportsSurgeryStationaryDialog"))
        AnaliticReportsSurgeryStationaryDialog.setWindowModality(QtCore.Qt.ApplicationModal)
        AnaliticReportsSurgeryStationaryDialog.resize(569, 382)
        AnaliticReportsSurgeryStationaryDialog.setSizeGripEnabled(True)
        self.gridLayout = QtGui.QGridLayout(AnaliticReportsSurgeryStationaryDialog)
        self.gridLayout.setMargin(4)
        self.gridLayout.setSpacing(4)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.lblBegDate = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblBegDate.setObjectName(_fromUtf8("lblBegDate"))
        self.gridLayout.addWidget(self.lblBegDate, 0, 0, 1, 1)
        self.cmbOrgStructure = COrgStructureComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbOrgStructure.setObjectName(_fromUtf8("cmbOrgStructure"))
        self.gridLayout.addWidget(self.cmbOrgStructure, 4, 1, 1, 3)
        self.edtBegDate = CDateEdit(AnaliticReportsSurgeryStationaryDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edtBegDate.sizePolicy().hasHeightForWidth())
        self.edtBegDate.setSizePolicy(sizePolicy)
        self.edtBegDate.setCalendarPopup(True)
        self.edtBegDate.setObjectName(_fromUtf8("edtBegDate"))
        self.gridLayout.addWidget(self.edtBegDate, 0, 1, 1, 1)
        spacerItem = QtGui.QSpacerItem(91, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 2, 1, 2)
        self.cmbTypeSurgery = QtGui.QComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbTypeSurgery.setObjectName(_fromUtf8("cmbTypeSurgery"))
        self.cmbTypeSurgery.addItem(_fromUtf8(""))
        self.cmbTypeSurgery.addItem(_fromUtf8(""))
        self.gridLayout.addWidget(self.cmbTypeSurgery, 8, 1, 1, 3)
        self.lblPerson = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblPerson.setObjectName(_fromUtf8("lblPerson"))
        self.gridLayout.addWidget(self.lblPerson, 6, 0, 1, 1)
        self.chkShowFlatCode = QtGui.QCheckBox(AnaliticReportsSurgeryStationaryDialog)
        self.chkShowFlatCode.setChecked(True)
        self.chkShowFlatCode.setObjectName(_fromUtf8("chkShowFlatCode"))
        self.gridLayout.addWidget(self.chkShowFlatCode, 11, 1, 1, 1)
        self.btnProfileList = QtGui.QPushButton(AnaliticReportsSurgeryStationaryDialog)
        self.btnProfileList.setObjectName(_fromUtf8("btnProfileList"))
        self.gridLayout.addWidget(self.btnProfileList, 14, 0, 1, 1)
        spacerItem1 = QtGui.QSpacerItem(129, 20, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 15, 0, 1, 2)
        self.lblOrgStructure = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblOrgStructure.setObjectName(_fromUtf8("lblOrgStructure"))
        self.gridLayout.addWidget(self.lblOrgStructure, 4, 0, 1, 1)
        self.cmbEventType = CRBComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbEventType.setObjectName(_fromUtf8("cmbEventType"))
        self.gridLayout.addWidget(self.cmbEventType, 2, 1, 1, 3)
        self.lblFinance = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblFinance.setObjectName(_fromUtf8("lblFinance"))
        self.gridLayout.addWidget(self.lblFinance, 7, 0, 1, 1)
        self.cmbFinance = CRBComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbFinance.setObjectName(_fromUtf8("cmbFinance"))
        self.gridLayout.addWidget(self.cmbFinance, 7, 1, 1, 3)
        self.cmbPerson = CPersonComboBoxEx(AnaliticReportsSurgeryStationaryDialog)
        self.cmbPerson.setObjectName(_fromUtf8("cmbPerson"))
        self.gridLayout.addWidget(self.cmbPerson, 6, 1, 1, 3)
        spacerItem2 = QtGui.QSpacerItem(91, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 0, 2, 1, 2)
        self.edtEndDate = CDateEdit(AnaliticReportsSurgeryStationaryDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edtEndDate.sizePolicy().hasHeightForWidth())
        self.edtEndDate.setSizePolicy(sizePolicy)
        self.edtEndDate.setCalendarPopup(True)
        self.edtEndDate.setObjectName(_fromUtf8("edtEndDate"))
        self.gridLayout.addWidget(self.edtEndDate, 1, 1, 1, 1)
        self.cmbSelectType = QtGui.QComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbSelectType.setObjectName(_fromUtf8("cmbSelectType"))
        self.cmbSelectType.addItem(_fromUtf8(""))
        self.cmbSelectType.addItem(_fromUtf8(""))
        self.gridLayout.addWidget(self.cmbSelectType, 3, 1, 1, 3)
        self.lblEventType = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblEventType.setObjectName(_fromUtf8("lblEventType"))
        self.gridLayout.addWidget(self.lblEventType, 2, 0, 1, 1)
        self.lblSelectActionType = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblSelectActionType.setObjectName(_fromUtf8("lblSelectActionType"))
        self.gridLayout.addWidget(self.lblSelectActionType, 13, 0, 1, 1)
        self.chkExistFlatCode = QtGui.QCheckBox(AnaliticReportsSurgeryStationaryDialog)
        self.chkExistFlatCode.setEnabled(True)
        self.chkExistFlatCode.setChecked(False)
        self.chkExistFlatCode.setObjectName(_fromUtf8("chkExistFlatCode"))
        self.gridLayout.addWidget(self.chkExistFlatCode, 12, 1, 1, 1)
        self.lblTypeSurgery = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblTypeSurgery.setObjectName(_fromUtf8("lblTypeSurgery"))
        self.gridLayout.addWidget(self.lblTypeSurgery, 8, 0, 1, 1)
        self.lblSelectType = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblSelectType.setObjectName(_fromUtf8("lblSelectType"))
        self.gridLayout.addWidget(self.lblSelectType, 3, 0, 1, 1)
        self.cmbSelectActionType = QtGui.QComboBox(AnaliticReportsSurgeryStationaryDialog)
        self.cmbSelectActionType.setObjectName(_fromUtf8("cmbSelectActionType"))
        self.cmbSelectActionType.addItem(_fromUtf8(""))
        self.cmbSelectActionType.addItem(_fromUtf8(""))
        self.cmbSelectActionType.addItem(_fromUtf8(""))
        self.cmbSelectActionType.addItem(_fromUtf8(""))
        self.cmbSelectActionType.addItem(_fromUtf8(""))
        self.gridLayout.addWidget(self.cmbSelectActionType, 13, 1, 1, 3)
        self.lblProfileList = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblProfileList.setWordWrap(True)
        self.lblProfileList.setObjectName(_fromUtf8("lblProfileList"))
        self.gridLayout.addWidget(self.lblProfileList, 14, 1, 1, 3)
        self.lblEndDate = QtGui.QLabel(AnaliticReportsSurgeryStationaryDialog)
        self.lblEndDate.setObjectName(_fromUtf8("lblEndDate"))
        self.gridLayout.addWidget(self.lblEndDate, 1, 0, 1, 1)
        self.chkIsGroupingOS = QtGui.QCheckBox(AnaliticReportsSurgeryStationaryDialog)
        self.chkIsGroupingOS.setChecked(True)
        self.chkIsGroupingOS.setObjectName(_fromUtf8("chkIsGroupingOS"))
        self.gridLayout.addWidget(self.chkIsGroupingOS, 9, 1, 1, 3)
        self.buttonBox = QtGui.QDialogButtonBox(AnaliticReportsSurgeryStationaryDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName(_fromUtf8("buttonBox"))
        self.gridLayout.addWidget(self.buttonBox, 16, 0, 1, 4)
        self.chkIsGroupingParentOS = QtGui.QCheckBox(AnaliticReportsSurgeryStationaryDialog)
        self.chkIsGroupingParentOS.setObjectName(_fromUtf8("chkIsGroupingParentOS"))
        self.gridLayout.addWidget(self.chkIsGroupingParentOS, 10, 1, 1, 3)
        self.lblBegDate.setBuddy(self.edtBegDate)
        self.lblOrgStructure.setBuddy(self.cmbOrgStructure)
        self.lblEndDate.setBuddy(self.edtEndDate)

        self.retranslateUi(AnaliticReportsSurgeryStationaryDialog)
        QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(_fromUtf8("accepted()")), AnaliticReportsSurgeryStationaryDialog.accept)
        QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(_fromUtf8("rejected()")), AnaliticReportsSurgeryStationaryDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(AnaliticReportsSurgeryStationaryDialog)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.edtBegDate, self.edtEndDate)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.edtEndDate, self.cmbEventType)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbEventType, self.cmbSelectType)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbSelectType, self.cmbOrgStructure)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbOrgStructure, self.cmbPerson)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbPerson, self.cmbFinance)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbFinance, self.cmbTypeSurgery)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbTypeSurgery, self.chkIsGroupingOS)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.chkIsGroupingOS, self.chkIsGroupingParentOS)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.chkIsGroupingParentOS, self.cmbSelectActionType)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.cmbSelectActionType, self.btnProfileList)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.btnProfileList, self.buttonBox)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.buttonBox, self.chkShowFlatCode)
        AnaliticReportsSurgeryStationaryDialog.setTabOrder(self.chkShowFlatCode, self.chkExistFlatCode)

    def retranslateUi(self, AnaliticReportsSurgeryStationaryDialog):
        AnaliticReportsSurgeryStationaryDialog.setWindowTitle(_translate("AnaliticReportsSurgeryStationaryDialog", "параметры отчёта", None))
        self.lblBegDate.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Дата &начала периода", None))
        self.edtBegDate.setDisplayFormat(_translate("AnaliticReportsSurgeryStationaryDialog", "dd.MM.yyyy", None))
        self.cmbTypeSurgery.setItemText(0, _translate("AnaliticReportsSurgeryStationaryDialog", "Номенклатурный", None))
        self.cmbTypeSurgery.setItemText(1, _translate("AnaliticReportsSurgeryStationaryDialog", "Пользовательский", None))
        self.lblPerson.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Врач", None))
        self.chkShowFlatCode.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Отображать \"Код для отчётов\"", None))
        self.btnProfileList.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Профиль выбытия", None))
        self.lblOrgStructure.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "&Подразделение", None))
        self.lblFinance.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Тип финансирования", None))
        self.edtEndDate.setDisplayFormat(_translate("AnaliticReportsSurgeryStationaryDialog", "dd.MM.yyyy", None))
        self.cmbSelectType.setItemText(0, _translate("AnaliticReportsSurgeryStationaryDialog", "по врачу ответственному за действие", None))
        self.cmbSelectType.setItemText(1, _translate("AnaliticReportsSurgeryStationaryDialog", "по врачу ответственному за событие", None))
        self.lblEventType.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Тип события", None))
        self.lblSelectActionType.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Отбор по", None))
        self.chkExistFlatCode.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Учитывать только заполненный \"Код для отчётов\"", None))
        self.lblTypeSurgery.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Учет операций", None))
        self.lblSelectType.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Выбор", None))
        self.cmbSelectActionType.setItemText(0, _translate("AnaliticReportsSurgeryStationaryDialog", "Операция", None))
        self.cmbSelectActionType.setItemText(1, _translate("AnaliticReportsSurgeryStationaryDialog", "Поступление", None))
        self.cmbSelectActionType.setItemText(2, _translate("AnaliticReportsSurgeryStationaryDialog", "Движение", None))
        self.cmbSelectActionType.setItemText(3, _translate("AnaliticReportsSurgeryStationaryDialog", "Выписка", None))
        self.cmbSelectActionType.setItemText(4, _translate("AnaliticReportsSurgeryStationaryDialog", "Выписка+внешние События", None))
        self.lblProfileList.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Не задано", None))
        self.lblEndDate.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Дата &окончания периода", None))
        self.chkIsGroupingOS.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "С детализацией по операциям", None))
        self.chkIsGroupingParentOS.setText(_translate("AnaliticReportsSurgeryStationaryDialog", "Группировать по родительскому подразделению", None))

from Orgs.OrgStructComboBoxes import COrgStructureComboBox
from Orgs.PersonComboBoxEx import CPersonComboBoxEx
from library.DateEdit import CDateEdit
from library.crbcombobox import CRBComboBox

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    AnaliticReportsSurgeryStationaryDialog = QtGui.QDialog()
    ui = Ui_AnaliticReportsSurgeryStationaryDialog()
    ui.setupUi(AnaliticReportsSurgeryStationaryDialog)
    AnaliticReportsSurgeryStationaryDialog.show()
    sys.exit(app.exec_())


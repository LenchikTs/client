<?xml version="1.0"?> 
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"> 
{: setPageSize('A4') }{: setOrientation('P') }{: setLeftMargin(13) }{: setTopMargin(6.5) }{: setRightMargin(8) }{: setBottomMargin(0.0) } 
<!-- отступ слева в мм -->
{: leftMM = 3}
<!-- отступ сверху мм -->
{:topMM = 0.5}
<!--Главный скрипт--> 
{:bdate=dialogs.dialDate(u"Введите дату выдачи ЛН" ).getVar()}
{: dialogPrintHeader = dialogs.dialBool(u"Печать шапки документа", u"Первичная печать (печатать шапку документа до периодов)", True)} 
{: printHeader = dialogPrintHeader.getVar()} 
{: date1 = tempInvalid.periods[-1].begDatePermit if len(tempInvalid.periods) else None} 
{: date2 = tempInvalid.periods[-1].endDatePermit if len(tempInvalid.periods) else None} 
{: sanatorium = tempInvalid.periods[-1].sanatorium if len(tempInvalid.periods) else None} 
{: stacuhod = tempInvalid.periods[-1].regime.code if len(tempInvalid.periods) else None} 
{: numberPermit = tempInvalid.periods[-1].numberPermit if len(tempInvalid.periods) else None} 
{: uhod = (tempInvalid.reason.code == "09")} 
{if: uhod} 
{: relations = range(len(client.relations))} 
{for: (i, rel) in enumerate(client.relations)} 
{: relations[i] = rel.other.fullName + ", " + rel.otherRole} 
{end:} 
{: dialogPersons = dialogs.dialMultiList(u"Выберите родственников (не более 2), за которыми осуществляется уход", relations)} 
{: personNumbers = dialogPersons.getVar()} 
{: person1 = client.relations[personNumbers[0]].other if personNumbers and len(personNumbers) else None} 
{: person2 = client.relations[personNumbers[1]].other if personNumbers and len(personNumbers) > 1 else None} 
{: rel1_name = client.relations[personNumbers[0]].role if personNumbers and len(personNumbers) else None}
{if: rel1_name == u"Мать"} 
{: rel1 = "38"} 
{elif: rel1_name == u"Отец"} 
{: rel1 = "39"} 
{elif: rel1_name == u"Опекун"} 
{: rel1 = "40"} 
{elif: rel1_name == u"Попечитель"} 
{: rel1 = "41"} 
{else:} 
{: rel1 = "42"} 
{end:} 
{: rel2_name = client.relations[personNumbers[1]].role if personNumbers and len(personNumbers) > 1 else None} 
{if: rel2_name == u"Мать"} 
{: rel2 = "38"} 
{elif: rel2_name == u"Отец"} 
{: rel2 = "39"} 
{elif: rel2_name == u"Опекун"} 
{: rel2 = "40"} 
{elif: rel2_name == u"Попечитель"} 
{: rel2 = "41"} 
{else:} 
{: rel2 = "42"} 
{end:} 
{else:} 
{: person1 = None} 
{: person2 = None} 
{: rel1 = None} 
{: rel2 = None} 
{end:} 
{if: len(tempInvalid.periods)} 
{: periodstrs = []} 
{for: (i, period) in enumerate(tempInvalid.periods)} 
{if: i < 3} 
{: periodstrs = periodstrs + ["%d: %s - %s"%(i, period.begDate.date.toString("dd.MM.yyyy"), period.endDate.date.toString("dd.MM.yyyy")) ,]} 
{end:} 
{end:} 
{: dialogPeriods = dialogs.dialMultiList(u"Впечатывать периоды:", periodstrs)} 
{: periodNumbers = dialogPeriods.getVar()} 
{else:} 
{: periodNumbers = []} 
{end:} 
{if: len(periodNumbers)}
{: specialists = [(i, period.expert) for (i, period) in enumerate(tempInvalid.periods) if i in periodNumbers and len(period.expert.shortName)]}
{: spec_strs = ["%s: %s"%(periodstrs[i], expert.shortName) for (i, expert) in specialists]}
{: dialogExperts = dialogs.dialMultiList(u"Впечатывать экспертов:", spec_strs)}
{: expertNumbers = dialogExperts.getVar()}
{: expertNumbers = [specialists[i][0] for i in expertNumbers]}
{else:}
{: expertNumbers = []}
{end:}


{: dialogOrg = dialogs.dialBool(u"Выводить организацию или подразделение?", u"Выводить данные об ЛПУ по базовому подразделению", False)} 
{: printOrgStructure = (dialogOrg.getVar() == True); } 
{: organisation = currentOrganisation.title if not printOrgStructure else currentOrgStructure.name} 
{: organisation = organisation.upper()} 
<!--удаляем из названия организации символы '",.-: --> 
{for: letter in ".,-:'\""} 
{: organisation = organisation.replace(letter, "")} 
{end:} 
{: address = currentOrganisation.address if not printOrgStructure else currentOrgStructure.address} 
{: address = address.upper()} 
<!--удаляем из адреса символы '",.-: --> 
{for: letter in ".,:'\""} 
{: address = address.replace(letter, "")} 
{end:} 
{: address = address.replace("-", " ")} 
{: address = address.replace(u"ПР ", "") } 
{: address = address.replace(u"УЛ ", "") } 
{: address = address.replace(u" Д ", " ") } 
{: OGRN = currentOrganisation.OGRN} 
{: date = tempInvalid.date if isDuplicate else currentDate} 
{: lastName = client.lastName.upper()} 
{: firstName = client.firstName.upper()} 
{: patrName = client.patrName.upper()} 
{: placeWork = tempInvalid.duplicatePlaceWork if (isDuplicate and tempInvalid.duplicateReason.code == "1") else tempInvalid.placeWork} 
{: placeWork = placeWork.upper()} 
{: sovmestit = (tempInvalid.busyness == 2)} 
{: number = tempInvalid.number if isDuplicate else ""} 
{def: shortn(person)} 
{: result = person.lastName + " " + (person.firstName[0] if len(person.firstName) else "") + (person.patrName[0] if len(person.patrName) else "")} 
{: result = result.upper()} 
{: return result} 
{end:} 
<!--приступить к работе: --> 
{if: len(tempInvalid.periods) and tempInvalid.periods[-1].result.code == "1"} 
{: pristupDate = tempInvalid.periods[-1].endDate.date.addDays(1)} 
<!--приступить к работе: {: pristupDate = None} --> 
<!-- {: pristupDate = tempInvalid.periods[-1].endDate.date.addDays(1)} убрал вывод даты -->
{end:} 
<!-- --> 
{: nex = ' '}
{if: sovmestit}
{if: tempInvalid.prev.prev}
{if: tempInvalid.prev.prev.next.busyness==2}
{: nex = tempInvalid.prev.prev.next.number}
{else:}
{if: tempInvalid.prev.prev.prev}
{if: tempInvalid.prev.prev.prev.next.busyness==2}
{: nex = tempInvalid.prev.prev.prev.next.number}
{end:}
{end:}
{end:}
{end:}
{end:}

<!-- --> 
{if: tempInvalid.prev} 
{: prev_number = tempInvalid.prev.number} 
{: prev_closed = tempInvalid.prev.closed}
{else:} 
{: prev_number = " "} 
{: prev_closed = " "} 
{end:} 
<!--Печатать корешок --> 
{: dialogKoreshok = dialogs.dialBool(u"Печать корешка", u"Печатать корешок листа нетрудоспособности", True)} 
{: printKoreshok = dialogKoreshok.getVar()} 
<!--Галочка беременности --> 
{if: tempInvalid.reason.name==u'Отпуск по беременности и родам (до)'}
{: dialogBerem = dialogs.dialBool(u"Печатать галочку", u"Поставлена на учет в ранние сроки беременности(до 12 недель)", True)} 
{: printBerem = dialogBerem.getVar()} 
{end:}
<!--Расстояние между буквами:--> 
{: L=11.3385} 
{def: writeText(x, y, s)} 
{for: i,c in enumerate(s)} 
<text x="{x+i*L}" y="{y}" textLength="{L}">{c}</text> 
{end:} 
{end:} 
{def: writeTextMM(x, y, s)} 
{: writeText((x+leftMM)*72/25.4, (y+topMM)*72/25.4, s)}  
{end:} 
<!-- Ищем периоды лечения в стационаре -->
{:illHistory = str(client.id)}
{:evEndDate = tempInvalid.endDate}
{:evBegDate = tempInvalid.begDate}
{if: tempInvalid.prev}
{:tmp = tempInvalid.prev}
{for: x in range (0, 10)}
	{if: tempInvalid.prev}
		{:evBegDate = tmp.begDate}
	{end:}
{end:}{end:}
{:events = getEventList(evBegDate, evEndDate)}
{: printStac = False}
{for: event in events}
	{if: event.eventType.medicalAidType.code == '1'}
		{for: on in event.actions}
			{if: on.flatCode == u'moving'}
				{if: not printStac}
					{for: act in event.actions}
						{if: act.flatCode == u'received' and not printStac}
							{:printStac = True}
							{if: len(event.externalId)}	{:illHistory = event.externalId} {end:}
							{:evBegDate = act.begDate}
						{end:}
					{end:}
				{end:}
				{for: act in event.actions}
					{if: act.name == u'Выписка'}
						{:evEndDate = act.endDate}
					{end:}
				{end:}
			{end:}	
		{end:}	
	{end:}
{end:}

<!--Конец главного скрипта--> 
<svg xmlns="http://www.w3.org/2000/svg" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
width="210mm" 
height="297mm" 
viewBox="-1 0 594 832" 
version="1.2" 
baseProfile="tiny"> 
<g transform="translate(45,50), rotate(-0.3)" style="font-family:'Courier'; font-size:10"> 
<image x="-350" y="0" width="100%" height="100%" xlink:href="vut_List.jpg"/> 
</g> 
<g transform="translate(5,11)" style="font-family:'Courier New'; font-size:8;font-weight:bold"> 
<!-- было: transform="translate(50,50) " style="font-family:'Courier'; font-size:10" --> 
{if: printHeader} 
<!--Галочки --> 
{: writeTextMM(63-1-0.5, 11-3-0.5, "v" if not isDuplicate else "")} 
{: writeTextMM(63-1-0.5, 16-3-0.5, "v" if isDuplicate else "")} 
<!-- пред. номер --> 
{: writeTextMM(102, 12.5, nex[:14] if sovmestit else "") } 
{: writeTextMM(102, 12.5, prev_number[:14] if isDuplicate or prev_closed==2 else "") } 
<!--Название организации--> 
{: writeTextMM(50, 17.5, organisation[:38])} 
<!--Адрес организации --> 
{: writeTextMM(50, 24.5, address[:38]) } 
<!--Дата выдачи --> 
{: writeTextMM(66, 31, "%.2d"%bdate.date.day()) } 
{: writeTextMM(76, 31, "%.2d"%bdate.date.month()) } 
{: writeTextMM(86, 31, "%.4d"%bdate.date.year()) } 
{: writeTextMM(106, 31, OGRN[:15]) } 
<!--ФИО пациента --> 
{: writeTextMM(50, 38.5, lastName) } 
{: writeTextMM(50, 44.5, firstName) } 
{: writeTextMM(50, 50.5, patrName) }
<!--Дата рождения пациента --> 
{: writeTextMM(6, 58, "%.2d"%client.birthDate.date.day()) } 
{: writeTextMM(16, 58, "%.2d"%client.birthDate.date.month()) } 
{: writeTextMM(26, 58, "%.4d"%client.birthDate.date.year()) } 
{: writeTextMM(54, 58, "v" if client.sexCode == 1 else "") } 
{: writeTextMM(61.5, 58, "v" if client.sexCode == 2 else "") } 
{: writeTextMM(126, 58, tempInvalid.reason.code[:2] if tempInvalid.reason else "") } 
{: writeTextMM(136, 58, tempInvalid.extraReason.code[:3] if tempInvalid.extraReason else "") } 
<!--Место работы пациента --> 
{: writeTextMM(6.5, 65, placeWork[:29]) } 
{: writeTextMM(18.5, 71.5, "v" if tempInvalid.busyness == 1 and not sovmestit else "") } 
{: writeTextMM(54, 71.5, "v" if sovmestit else "") } 
{: writeTextMM(77, 71.5, prev_number[:14] if sovmestit else "") } 
{: writeTextMM(155, 71.5, ("v" if tempInvalid.busyness == 3 and not sovmestit else "")) } 
{if: str(date1) != ""}
<!--Дата и номер путевки --> 
{if: numberPermit is not null}
{: writeTextMM(14, 82.5, "%.2d"%date1.date.day() if date1 else '')} 
{: writeTextMM(24, 82.5, "%.2d"%date1.date.month() if date1 else '') } 
{: writeTextMM(34, 82.5, "%.4d"%date1.date.year() if date1 else '') } 
{: writeTextMM(58, 82.5, "%.2d"%date2.date.day() if date2 else '')} 
{: writeTextMM(68, 82.5, "%.2d"%date2.date.month() if date2 else '') } 
{: writeTextMM(78, 82.5, "%.4d"%date2.date.year() if date2 else '') } 
{: writeTextMM(102, 82.5, numberPermit[:6] if numberPermit else '') } 
{: writeTextMM(125, 82.5, sanatorium.OGRN) } 
{end:} 

{end:} 

<!--Родственники --> 
{: writeTextMM(10, 85.5, "%.2d"%person1.ageTuple[3] if person1 and person1.ageTuple[3] > 0 else "")} 
{: writeTextMM(16, 85.5, "%.2d"%(person1.ageTuple[2]%12) if person1 and person1.ageTuple[3] == 0 else "")} 
{: writeTextMM(34, 85.5, rel1[:2] if person1 else "")} 
{: writeTextMM(46, 85.5, person1.fullName[:39].upper() if person1 else "") } 
{: writeTextMM(10, 90.5, "%.2d"%person2.ageTuple[3] if person2 and person2.ageTuple[3] > 0  else "")} 
{: writeTextMM(16, 90.5, "%.2d"%(person2.ageTuple[2]%12) if person2 and person2.ageTuple[3] == 0 else "")} 
{: writeTextMM(34, 90.5, rel2[:2] if person2 else "")} 
{: writeTextMM(46, 90.5, person2.fullName[:39].upper() if person2 else "") } 
{end:}
<!--Галочка беременности-->
{if: tempInvalid.reason.name==u'Отпуск по беременности и родам (до)'}
{if: printBerem}
{: writeTextMM(83, 98, "v") } 
{else:}
{: writeTextMM(101, 98, "v") } 
{end:}
{end:}
<!-- Находился в стационаре -->
{if: uhod and stacuhod}
{: writeTextMM( 49, 107.25, "%.2d"%date1.date.day() if date1 else '')} 
{: writeTextMM( 59, 107.25, "%.2d"%date1.date.month() if date1 else '') } 
{: writeTextMM( 69, 107.25, "%.4d"%date1.date.year() if date1 else '') } 
{: writeTextMM( 96, 107.25, "%.2d"%date2.date.day() if date2 else '')} 
{: writeTextMM( 106, 107.25, "%.2d"%date2.date.month() if date2 else '') } 
{: writeTextMM( 116, 107.25, "%.4d"%date2.date.year() if date2 else '') } 
{else:}
{if: printStac}
{: writeTextMM( 49, 107.25, "%.2d"%evBegDate.date.day())} 
{: writeTextMM( 59, 107.25, "%.2d"%evBegDate.date.month()) } 
{: writeTextMM( 69, 107.25, "%.4d"%evBegDate.date.year()) } 
{: writeTextMM( 96, 107.25, "%.2d"%evEndDate.date.day())} 
{: writeTextMM( 106, 107.25, "%.2d"%evEndDate.date.month()) } 
{: writeTextMM( 116, 107.25, "%.4d"%evEndDate.date.year()) } 
{end:}
{end:}
<!--Период 1 --> 
{if: isDuplicate}
{if: periodNumbers and 0 in periodNumbers} 
{: period = tempInvalid.periods[0]} 
{: writeTextMM( 3, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 141, "%.4d"%period.begDate.date.year()) } 


{if: periodNumbers and 2 in periodNumbers} 
{: period = tempInvalid.periods[2]} 
{if: (period.endDate)} 
{: writeTextMM( 39, 141, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 141, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 141, "%.4d"%period.endDate.date.year()) }  
{else:}
{: writeTextMM( 3, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 141, "%.4d"%period.begDate.date.year()) }
{end:}
{else:}
{if: periodNumbers and 1 in periodNumbers} 
{: period = tempInvalid.periods[1]} 
{if: (period.endDate)} 
{: writeTextMM( 39, 141, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 141, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 141, "%.4d"%period.endDate.date.year()) }  
{else:}
{: writeTextMM( 3, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 141, "%.4d"%period.begDate.date.year()) }
{end:}
{else:}
{if: periodNumbers and 0 in periodNumbers} 
{: period = tempInvalid.periods[0]} 
{if: (period.endDate)} 
{: writeTextMM( 39, 141, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 141, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 141, "%.4d"%period.endDate.date.year()) }  
{else:}
{: writeTextMM( 3, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 141, "%.4d"%period.begDate.date.year()) }
{end:}
{end:}
{end:}
{end:}


{if: period.endPerson}
{: writeTextMM( 75, 141, period.endPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 141, shortn(period.endPerson)[:14]) } 
{else:}
{: writeTextMM( 75, 141, period.begPerson.speciality.name[:9].upper())} 
{: writeTextMM(111, 141, shortn(period.begPerson)[:14]) } 
{end:}
{if: 0 in expertNumbers}
{: writeTextMM( 75, 145, u"Пред. ВК") } 
{: writeTextMM(111, 145, shortn(period.expert)[:14]) } 
{end:}
{end:} 


{else:}
{if: periodNumbers and 0 in periodNumbers} 
{: period = tempInvalid.periods[0]} 
{if: (period.endDate)} 
{: writeTextMM( 3, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 141, "%.4d"%period.begDate.date.year()) } 
{: writeTextMM( 39, 141, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 141, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 141, "%.4d"%period.endDate.date.year()) } 
{else:}
{: writeTextMM( 8, 141, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 18, 141, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 28, 141, "%.4d"%period.begDate.date.year()) } 
{end:}
{if: period.endPerson}
{: writeTextMM( 75, 141, period.endPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 141, shortn(period.endPerson)[:14]) } 
{else:}
{: writeTextMM( 75, 141, period.begPerson.speciality.name[:9].upper())} 
{: writeTextMM(111, 141, shortn(period.begPerson)[:14]) } 
{end:}
{if: 0 in expertNumbers}
{: writeTextMM( 75, 145, u"Пред. ВК") } 
{: writeTextMM(111, 145, shortn(period.expert)[:14]) } 
{end:}
{end:} 
<!--Период 2 --> 
{if: periodNumbers and 1 in periodNumbers} 
{: period = tempInvalid.periods[1]}
{if: (period.endDate)}  
{: writeTextMM( 3, 151, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 151, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 151, "%.4d"%period.begDate.date.year()) } 
{: writeTextMM( 39, 151, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 151, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 151, "%.4d"%period.endDate.date.year()) } 
{else:}
{: writeTextMM( 8, 151, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 18, 151, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 28, 151, "%.4d"%period.begDate.date.year()) } 
{end:}
{if: period.endPerson}
{: writeTextMM( 75, 151, period.endPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 151, shortn(period.endPerson)[:14]) } 
{else:}
{: writeTextMM( 75, 151, period.begPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 151, shortn(period.begPerson)[:14]) }
{end:}
{if: 1 in expertNumbers}
{: writeTextMM( 75, 155, u"Пред. ВК") } 
{: writeTextMM(111, 155, shortn(period.expert)[:14]) }
{end:}
{end:} 
<!--Период 3 --> 
{if: periodNumbers and 2 in periodNumbers} 
{: period = tempInvalid.periods[2]} 
{if: (period.endDate)}
{: writeTextMM( 3, 161, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 13, 161, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 23, 161, "%.4d"%period.begDate.date.year()) } 
{: writeTextMM( 39, 161, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM( 49, 161, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM( 59, 161, "%.4d"%period.endDate.date.year()) } 
{else:}
{: writeTextMM( 8, 161, "%.2d"%period.begDate.date.day()) } 
{: writeTextMM( 18, 161, "%.2d"%period.begDate.date.month()) } 
{: writeTextMM( 28, 161, "%.4d"%period.begDate.date.year()) } 
{end:}
{if: period.endPerson}
{: writeTextMM( 75, 161, period.endPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 161, shortn(period.endPerson)[:14]) }
{else:}
{: writeTextMM( 75, 161, period.begPerson.speciality.name[:9].upper()) } 
{: writeTextMM(111, 161, shortn(period.begPerson)[:14]) }
{end:}
{if: 2 in expertNumbers}
{: writeTextMM( 75, 165, u"Пред. ВК") } 
{: writeTextMM(111, 165, shortn(period.expert)[:14]) }
{end:}
{end:} 
{end:} 
<!--Приступить к работе с --> 
{if: (period.endDate)}
<!--: pristupDate = period.endDate.date.addDays(1)  -->
{if: pristupDate} 
{: writeTextMM(45, 172, "%.2d"%pristupDate.day()) } 
{: writeTextMM(55, 172, "%.2d"%pristupDate.month()) } 
{: writeTextMM(65, 172, "%.4d"%pristupDate.year()) } 
{if: tempInvalid.next}
{: writeTextMM(115, 172, "%.2d"%period.endDate.date.day()) } 
{: writeTextMM(125, 172, "%.2d"%period.endDate.date.month()) } 
{: writeTextMM(135, 172, "%.4d"%period.endDate.date.year()) } 
{end:} 
{end:} 
{end:}
{if: (period.endDate)}
{if: len(tempInvalid.periods) and tempInvalid.periods[-1].result.code !="1"}
{: writeTextMM(102, 172, tempInvalid.periods[-1].result.code) } 
{else:}
{end:}
{end:}
{if: tempInvalid.closed==2}
{: writeTextMM(45, 177, tempInvalid.next.number)} 
{end:}
<!--Корешок --> 
{if: printKoreshok} 
<!--Галочки и предыдущий номер --> 
{: writeTextMM(66-1+4, 249.5-1-2, "v" if (not isDuplicate and not tempInvalid.prev) else "")} 
{: writeTextMM(66-1+4, 249.5-1-2, "v" if isDuplicate else "")} 
<!-- {: writeTextMM(103+4, 256-2, tempInvalid.reason.code[:2])} непонятно откуда взялось, закоментил-->
<!--ФИО --> 
{: writeTextMM(9, 259, lastName) } 
{: writeTextMM(9, 265, firstName) } 
{: writeTextMM(9, 271, patrName) } 
{: writeTextMM(9, 279, ("v" if printBerem else "")) } 
<!--Место работы --> 
{: writeTextMM(9, 278-1, placeWork[:29]) } 
{: writeTextMM(16.5, 283.5, ("v" if tempInvalid.busyness == 1 and not sovmestit else "")) } 
{: writeTextMM(49, 283.5, ("v" if sovmestit else "")) } 
{: writeTextMM(76, 283.5, number[:12]) } 
<!-- ФИО врача --> 
{if: period.endPerson}
{: writeTextMM(136.5, 266, shortn(period.endPerson)) } 
{else:}
{: writeTextMM(136.5, 266, shortn(period.begPerson)) } 
{end:}
<!-- № истории болезни и дата выдачи --> 
{: writeTextMM(161.5, 272, "%d"%client.id) } 
{: writeTextMM(161.5, 278, "%.2d"%bdate.date.day()) } 
{: writeTextMM(171.5, 278, "%.2d"%bdate.date.month()) } 
{: writeTextMM(181.5, 278, "%.4d"%bdate.date.year()) } 
{end:} 
</g> 
</svg> 